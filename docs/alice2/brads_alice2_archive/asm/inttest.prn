                        
                        
                        ;
                        ; Commonly used assembly routines
                        ;
                        
                        ; 8259 Constants
   0000                 I8259A	EQU	000H		; 8259 port 1
   0001                 I8259B	EQU	001H		; 8259 port 2
                        
                        ;
                        ; LCD Constants
                        ;
   0002                 LCDINST	EQU	002H		; LCD instruction I/O port
   0003                 LCDDATA	EQU	003H		; LCD data I/O port
   0001                 LCLEAR	EQU	001H		; LCD clear instruction
   0038                 LRESET	EQU	038H		; LCD reset to normal instruction
   0080                 LHALF1	EQU	080H		; LCD move cursor to char 1
   00c0                 LHALF2	EQU	0c0H		; LCD move cursor to char 9
   000a                 PAUSE	EQU	0aH		; a UNIX newline
   0000                 STACKTOP	EQU	00000H	; top of stack (wraps to 0ffff)
                        
                        ; PIC Constants
   0004                 PIC	EQU	004H		; PIC I/O port
                        
                        ;
                        ; Set up useful stuff, jump to main program
                        ;
   0000   31 00 00      	LD	SP, STACKTOP
   0003   cd 4c 00      	CALL	LCDINIT
   0006   c3 38 01      	JP 	MAIN		; get past library routines
                        
                        ;
                        ; Catch reset if it happens and try to print it on the LCD
                        ;
                        
   0038                 	ORG	0038H		; Catch a reset
   0038   21 3f 00      	LD	HL, GOTRESETSTR
   003b   cd 89 00      	CALL	LCDPRINT
   003e   76            	HALT
                        
   003f   47 6f 74 20   GOTRESETSTR	DB	"Got RST 38H", PAUSE, 0
   0043   52 53 54 20   
   0047   33 38 48 0a   
   004b   00            
                        
                        
                        ;
                        ; LCD Init routine
                        ; In: nothing
                        ;
   004c                 LCDINIT
                        
                        
   004c   c5            	PUSH	BC
   004d   e5            	PUSH	HL
                        
   004e   21 6b 00      	LD	HL, LISTRING
   0051   06 0a         	LD	B, LISTRLEN
                        
   0053   c3 58 00      	JP	OUTBLOOP
                        
                        ;
                        ; LCD string bytes output routine
                        ; In:
                        ;     B    - length divided by two, (e.g. # of bytes to output, not
                        ; 	    including the I/O addresses)
                        ;     HL   - address of bytes
                        ;
   0056                 OUTBYTES
   0056   c5            	PUSH	BC
   0057   e5            	PUSH	HL
                        
   0058                 OUTBLOOP
   0058   4e            	LD	C, (HL)
   0059   23            	INC	HL
   005a   ed a3         	OUTI
   005c   20 fa         	JR	NZ, OUTBLOOP
                        
                        	; Probably need a delay here at 1 MHz.
                        	; Are we supposed to check busy bit and wait until not busy?
                        
   005e   e1            	POP	HL
   005f   c1            	POP	BC
                        
   0060   c9            	RET
                        
                        ;
                        ; Clear LCD display
                        ; In: nothing
                        ;
   0061                 LCDCLR
   0061   c5            	PUSH	BC
   0062   e5            	PUSH	HL
                        
   0063   21 7f 00      	LD	HL, LCSTRING
   0066   06 05         	LD	B, LCSTRLEN	; falls through into byte output loop
   0068   c3 58 00      	JP	OUTBLOOP
                        
                        ;
                        ; LCD Initialization string
                        ;
   000a                 LISTRLEN	EQU	10
   006b                 LISTRING
   006b   02 38         	DB	LCDINST, LRESET
   006d   02 38         	DB	LCDINST, LRESET
   006f   02 06         	DB	LCDINST, 006H
   0071   02 0e         	DB	LCDINST, 00eH
   0073   02 01         	DB	LCDINST, LCLEAR
   0075   02 80         	DB	LCDINST, LHALF1
   0077   02 80         	DB	LCDINST, LHALF1
   0079   02 80         	DB	LCDINST, LHALF1
   007b   02 80         	DB	LCDINST, LHALF1
   007d   02 80         	DB	LCDINST, LHALF1
                        
   0005                 LCSTRLEN	EQU	5
   007f                 LCSTRING
   007f   02 01         	DB	LCDINST, LCLEAR
   0081   02 80         	DB	LCDINST, LHALF1
   0083   02 80         	DB	LCDINST, LHALF1
   0085   02 80         	DB	LCDINST, LHALF1
   0087   02 80         	DB	LCDINST, LHALF1
                        
                        ;
                        ; LCD String output routine
                        ; In:
                        ;     HL   - Address of null-terminated string
                        ;
   0089                 LCDPRINT
                        
                        
   0089   f5            	PUSH	AF
   008a   c5            	PUSH	BC
   008b   d5            	PUSH	DE
   008c   e5            	PUSH	HL
                        
   008d   3e 01         	LD	A, LCLEAR
   008f   d3 02         	OUT	(LCDINST), A		; do a clear
                        
                        
   0091   06 fa         	LD	B, 250		; 250 cycles of wait
   0093                 LCDPCLOOP
   0093   10 fe         	DJNZ	LCDPCLOOP
                        
                        
   0095   0e 03         	LD	C, LCDDATA
   0097   16 19         	LD	D, 25		; when 1->0, switch to 2nd display
                        
   0099                 LCDPLOOP
   0099   15            	DEC	D
   009a   c2 a5 00      	JP	NZ, LCDNOSWITCH
                        
   009d   3e c0         	LD	A, LHALF2	; set LCD to address 0xc0
   009f   d3 02         	OUT	(LCDINST), A
                        
                        
   00a1   06 14         	LD	B, 20		; 20 cycles of wait for write to LCD
   00a3                 LCDP2LOOP
   00a3   10 fe         	DJNZ	LCDP2LOOP	; fall through
                        
                        
   00a5                 LCDNOSWITCH
                        
   00a5   7e            	LD	A, (HL)
   00a6   fe 00         	CP	0
   00a8   ca df 00      	JP	Z, LCDPDONE
                        
   00ab   fe 0a         	CP	PAUSE
   00ad   c2 d5 00      	JP	NZ, LCDPDOIT
                        
                        ;	LD	A, 0dh		; return
                        ;	OUT	(PIC), A
                        
                        
                        	; wait for two seconds here!
   00b0   16 02         	LD	D, 2		; 2 * 256 * 256 cycles is close to 1 sec
   00b2                 LCDP1SL1
   00b2   3e 00         	LD	A, 0		; 256 * 256 cycles
   00b4                 LCDP1SL2
   00b4   06 00         	LD	B, 0		; 256 cycles
   00b6                 LCDP1SL3
   00b6   10 fe         	DJNZ	LCDP1SL3
                        
   00b8   3d            	DEC	A
   00b9   c2 b4 00      	JP	NZ, LCDP1SL2
                        
   00bc   15            	DEC	D
   00bd   c2 b2 00      	JP	NZ, LCDP1SL1
                        
                        
   00c0   3e 01         	LD	A, LCLEAR
   00c2   d3 02         	OUT	(LCDINST), A	; do a clear
                        
                        ;	LD	A, 0ah		; linefeed
                        ;	OUT	(PIC), A
                        
                        
   00c4   06 fa         	LD	B, 250		; 250 cycles of wait
   00c6                 LCDPNLOOP
   00c6   10 fe         	DJNZ	LCDPNLOOP
                        
                        
   00c8   3e 80         	LD	A, LHALF1
   00ca   d3 02         	OUT	(LCDINST), A	; go to address 0x80
                        
                        
   00cc   06 14         	LD	B, 20		; 20 cycles of wait for write
   00ce                 LCDP1LOOP
   00ce   10 fe         	DJNZ	LCDP1LOOP
                        
                        
   00d0   16 09         	LD	D, 9		; reset half counter
   00d2   c3 db 00      	JP	LCDPNEXT	; continue with next character
                        
   00d5                 LCDPDOIT
   00d5   d3 03         	OUT	(LCDDATA), A	; output that guy
                        ;	OUT	(PIC), A
                        
                        
   00d7   06 14         	LD	B, 20		; 20 cycles of wait for write
   00d9                 LCDPWLOOP
   00d9   10 fe         	DJNZ	LCDPWLOOP
                        
                        
   00db                 LCDPNEXT
   00db   23            	INC	HL		; next char
   00dc   c3 99 00      	JP	LCDPLOOP
                        
   00df                 LCDPDONE
                        
   00df   e1            	POP	HL
   00e0   d1            	POP	DE
   00e1   c1            	POP	BC
   00e2   f1            	POP	AF
                        
   00e3   c9            	RET
                        
                        
                        ;
                        ; Wait for seconds routine
                        ; In:	
                        ;     A    - number of seconds to wait
                        ;
   00e4                 WAITSECS
   00e4   f5            	PUSH	AF
   00e5   c5            	PUSH	BC
   00e6   07            	RLCA		; multiply A by 2
                        
   00e7                 LCDP1SLP1
   00e7   0e 00         	LD	C, 0		; 256 * 256 cycles
   00e9                 LCDP1SLP2
   00e9   06 00         	LD	B, 0		; 256 cycles
   00eb                 LCDP1SLP3
   00eb   10 fe         	DJNZ	LCDP1SLP3
                        
   00ed   0d            	DEC	C
   00ee   c2 e9 00      	JP	NZ, LCDP1SLP2
                        
   00f1   3d            	DEC	A
   00f2   c2 e7 00      	JP	NZ, LCDP1SLP1
                        
   00f5   c1            	POP	BC
   00f6   f1            	POP	AF
                        
   00f7   c9            	RET
                        
                        
                        ;
                        ; put the hex string representation of A into the location at IX
                        ; IX becomes IX + 2
                        ;
   00f8                 PHEXBYTE
   00f8   f5            	PUSH	AF
   00f9   c5            	PUSH	BC
                        
   00fa   47            	LD	B, A
   00fb   e6 f0         	AND	0f0H
   00fd   cb 3f         	SRL	A
   00ff   cb 3f         	SRL	A
   0101   cb 3f         	SRL	A
   0103   cb 3f         	SRL	A
   0105   fe 0a         	CP	0aH
   0107   da 0f 01      	JP	C, DIG1LESS
   010a   c6 57         	ADD	A, "a" - 10
   010c   c3 11 01      	JP	DIG1DONE
   010f                 DIG1LESS
   010f   c6 30         	ADD	A, "0"
   0111                 DIG1DONE
                        
   0111   dd 77 00      	LD	(IX), A
   0114   dd 23         	INC	IX
   0116   78            	LD	A, B
   0117   e6 0f         	AND	0fH
   0119   fe 0a         	CP	0aH
   011b   da 23 01      	JP	C, DIG2LESS
   011e   c6 57         	ADD	A, "a" - 10
   0120   c3 25 01      	JP	DIG2DONE
   0123                 DIG2LESS
   0123   c6 30         	ADD	A, "0"
   0125                 DIG2DONE
   0125   dd 77 00      	LD	(IX), A
   0128   dd 23         	INC	IX
                        
   012a   c1            	POP	BC
   012b   f1            	POP	AF
   012c   c9            	RET
                        
                        ;
                        ; put the hex string representation of HL into the location at IX
                        ; IX becomes IX + 4
                        ;
   012d                 PHEXWORD
                        
   012d   f5            	PUSH	AF
   012e   7c            	LD	A, H
   012f   cd f8 00      	CALL	PHEXBYTE
   0132   7d            	LD	A, L
   0133   cd f8 00      	CALL	PHEXBYTE
   0136   f1            	POP	AF
   0137   c9            	RET
                        
                        
   8000                 INTFLAG	EQU	08000H
   8001                 NUM2	EQU	08001H
   8002                 NUM7	EQU	08002H
   9000                 PRNTBUF	EQU	09000H
   a000                 IRQ2BUF	EQU	0A000H
   b000                 IRQ7BUF	EQU	0B000H
                        
                        ;----------------------------------------
                        
                        ;
                        ; Memory test program
                        ;
                        
   0138                 MAIN
   0138   21 09 03      	LD	HL, INTROSTR
   013b   cd 89 00      	CALL 	LCDPRINT
                        
                        ;
                        ; Setup the 8259
                        ;
                        
   013e   3e 16         	LD	A, 016H    ; F = 1, S = 1
   0140   d3 00         	OUT	(I8259A), A
                        
   0142   3e 3f         	LD	A, 03FH    ; Table is at 03F00H
   0144   d3 01         	OUT	(I8259B), A
                        
   0146   3e f0         	LD	A, 0F0H    ; Enable lower 4 IRQs
   0148   d3 01         	OUT	(I8259B), A
                        
                        ;
                        ; Setup interrupt mode 0
                        ;
                        
   014a   ed 46         	IM	0
   014c   fb            	EI
                        
                        ;
                        ; Initialize our variables
                        ;
                        
   014d   3e 00         	LD	A, 0
   014f   32 00 80      	LD	(INTFLAG), A
   0152   32 01 80      	LD	(NUM2), A
   0155   32 02 80      	LD	(NUM7), A
                        
                        ;
                        ; Go, go, go!
                        ;
                        
   0158                 PRNTAGAIN
   0158   21 19 03      	LD	HL, JUSTSTR
   015b   cd 89 00      	CALL	LCDPRINT
                        
   015e   cd 6d 01      	CALL	TESTINT
                        
   0161   21 2b 03      	LD	HL, DOINGSTR
   0164   cd 89 00      	CALL	LCDPRINT
                        
   0167   cd 6d 01      	CALL	TESTINT
                        
   016a   c3 58 01      	JP	PRNTAGAIN
                        
                        ;----------------------------------------
                        
   016d                 TESTINT
   016d   f5            	PUSH	AF
   016e   c5            	PUSH	BC
   016f   e5            	PUSH	HL
   0170   dd e5         	PUSH	IX
                        
   0172   21 00 80      	LD	HL, INTFLAG
   0175   cb 46         	BIT	0, (HL)
   0177   28 06         	JR	Z, NOINT0
                        
   0179   21 3d 03      	LD	HL, GOTINT0STR
   017c   cd 89 00      	CALL	LCDPRINT
                        
   017f                 NOINT0
   017f   21 00 80      	LD	HL, INTFLAG
   0182   cb 4e         	BIT	1, (HL)
   0184   28 06         	JR	Z, NOINT1
                        
   0186   21 4e 03      	LD	HL, GOTINT1STR
   0189   cd 89 00      	CALL	LCDPRINT
                        
   018c                 NOINT1
   018c   21 00 80      	LD	HL, INTFLAG
   018f   cb 56         	BIT	2, (HL)
   0191   28 2f         	JR	Z, NOINT2
                        
   0193   21 5f 03      	LD	HL, GOTINT2STR
   0196   cd 89 00      	CALL	LCDPRINT
                        
   0199   21 00 a0      	LD	HL, IRQ2BUF
   019c   dd 21 00 90   	LD	IX, PRNTBUF
   01a0   3a 01 80      	LD	A, (NUM2)
   01a3   fe 08         	CP	8
   01a5   da aa 01      	JP	C, NOCLIP2
   01a8   3e 08         	LD	A, 8
   01aa                 NOCLIP2
   01aa   47            	LD	B, A
                        
   01ab                 INT2BYTE
   01ab   7e            	LD	A, (HL)
   01ac   cd f8 00      	CALL	PHEXBYTE
   01af   23            	INC	HL
   01b0   10 f9         	DJNZ	INT2BYTE
                        
   01b2   dd 36 00 0a   	LD	(IX), 10
   01b6   dd 23         	INC	IX
   01b8   dd 36 00 00   	LD	(IX), 0
   01bc   21 00 90      	LD	HL, PRNTBUF
   01bf   cd 89 00      	CALL	LCDPRINT
                        
   01c2                 NOINT2
   01c2   21 00 80      	LD	HL, INTFLAG
   01c5   cb 5e         	BIT	3, (HL)
   01c7   28 06         	JR	Z, NOINT3
                        
   01c9   21 70 03      	LD	HL, GOTINT3STR
   01cc   cd 89 00      	CALL	LCDPRINT
                        
   01cf                 NOINT3
   01cf   21 00 80      	LD	HL, INTFLAG
   01d2   cb 66         	BIT	4, (HL)
   01d4   28 06         	JR	Z, NOINT4
                        
   01d6   21 81 03      	LD	HL, GOTINT4STR
   01d9   cd 89 00      	CALL	LCDPRINT
                        
   01dc                 NOINT4
   01dc   21 00 80      	LD	HL, INTFLAG
   01df   cb 6e         	BIT	5, (HL)
   01e1   28 06         	JR	Z, NOINT5
                        
   01e3   21 92 03      	LD	HL, GOTINT5STR
   01e6   cd 89 00      	CALL	LCDPRINT
                        
   01e9                 NOINT5
   01e9   21 00 80      	LD	HL, INTFLAG
   01ec   cb 76         	BIT	6, (HL)
   01ee   28 06         	JR	Z, NOINT6
                        
   01f0   21 a3 03      	LD	HL, GOTINT6STR
   01f3   cd 89 00      	CALL	LCDPRINT
                        
   01f6                 NOINT6
   01f6   21 00 80      	LD	HL, INTFLAG
   01f9   cb 7e         	BIT	7, (HL)
   01fb   28 2f         	JR	Z, NOINT7
                        
   01fd   21 b4 03      	LD	HL, GOTINT7STR
   0200   cd 89 00      	CALL	LCDPRINT
                        
   0203   21 00 b0      	LD	HL, IRQ7BUF
   0206   dd 21 00 90   	LD	IX, PRNTBUF
   020a   3a 02 80      	LD	A, (NUM7)
   020d   fe 08         	CP	8
   020f   da 14 02      	JP	C, NOCLIP7
   0212   3e 08         	LD	A, 8
   0214                 NOCLIP7
   0214   47            	LD	B, A
                        
   0215                 INT7BYTE
   0215   7e            	LD	A, (HL)
   0216   cd f8 00      	CALL	PHEXBYTE
   0219   23            	INC	HL
   021a   10 f9         	DJNZ	INT7BYTE
                        
   021c   dd 36 00 0a   	LD	(IX), 10
   0220   dd 23         	INC	IX
   0222   dd 36 00 00   	LD	(IX), 0
   0226   21 00 90      	LD	HL, PRNTBUF
   0229   cd 89 00      	CALL	LCDPRINT
                        
   022c                 NOINT7
   022c   3e 00         	LD	A, 0
   022e   32 00 80      	LD	(INTFLAG), A
   0231   32 01 80      	LD	(NUM2), A
   0234   32 02 80      	LD	(NUM7), A
                        
   0237   dd e1         	POP	IX
   0239   e1            	POP	HL
   023a   c1            	POP	BC
   023b   f1            	POP	AF
   023c   c9            	RET
                        
                        ;----------------------------------------
                        
   023d                 ISR0
   023d   f5            	PUSH	AF
                        
   023e   3a 00 80      	LD	A, (INTFLAG)
   0241   f6 01         	OR	1
   0243   32 00 80      	LD	(INTFLAG), A
                        
   0246   3e 20         	LD	A, 020H		; End of Interrupt
   0248   d3 00         	OUT	(I8259A), A
                        
   024a   f1            	POP	AF
   024b   fb            	EI
   024c   c9            	RET
                        
   024d                 ISR1
   024d   f5            	PUSH	AF
                        
   024e   3a 00 80      	LD	A, (INTFLAG)
   0251   f6 02         	OR	2
   0253   32 00 80      	LD	(INTFLAG), A
                        
   0256   3e 20         	LD	A, 020H		; End of Interrupt
   0258   d3 00         	OUT	(I8259A), A
                        
   025a   f1            	POP	AF
   025b   fb            	EI
   025c   c9            	RET
                        
   025d                 ISR2
   025d   f5            	PUSH	AF
   025e   e5            	PUSH	HL
   025f   c5            	PUSH	BC
                        
   0260   3a 00 80      	LD	A, (INTFLAG)
   0263   f6 04         	OR	4
   0265   32 00 80      	LD	(INTFLAG), A
                        
   0268   21 00 a0      	LD	HL, IRQ2BUF
   026b   3a 01 80      	LD	A, (NUM2)
   026e   4f            	LD	C, A
   026f   06 00         	LD	B, 0
   0271   09            	ADD	HL, BC		; HL = pointer into buffer
                        
   0272   3e 0a         	LD	A, 00AH		; Read IR register
   0274   d3 00         	OUT	(I8259A), A
   0276   db 00         	IN	A, (I8259A)
   0278   77            	LD	(HL), A
   0279   23            	INC	HL
                        
   027a   3e 0b         	LD	A, 00BH		; Read IS register
   027c   d3 00         	OUT	(I8259A), A
   027e   db 00         	IN	A, (I8259A)
   0280   77            	LD	(HL), A
   0281   23            	INC	HL
                        
   0282   3a 01 80      	LD	A, (NUM2)
   0285   3c            	INC	A
   0286   3c            	INC	A
   0287   32 01 80      	LD	(NUM2), A
                        
   028a   3e 20         	LD	A, 020H		; End of Interrupt
   028c   d3 00         	OUT	(I8259A), A
                        
   028e   c1            	POP	BC
   028f   e1            	POP	HL
   0290   f1            	POP	AF
   0291   fb            	EI
   0292   c9            	RET
                        
   0293                 ISR3
   0293   f5            	PUSH	AF
                        
   0294   3a 00 80      	LD	A, (INTFLAG)
   0297   f6 08         	OR	8
   0299   32 00 80      	LD	(INTFLAG), A
                        
   029c   3e 20         	LD	A, 020H		; End of Interrupt
   029e   d3 00         	OUT	(I8259A), A
                        
   02a0   f1            	POP	AF
   02a1   fb            	EI
   02a2   c9            	RET
                        
   02a3                 ISR4
   02a3   f5            	PUSH	AF
                        
   02a4   3a 00 80      	LD	A, (INTFLAG)
   02a7   f6 10         	OR	16
   02a9   32 00 80      	LD	(INTFLAG), A
                        
   02ac   3e 20         	LD	A, 020H		; End of Interrupt
   02ae   d3 00         	OUT	(I8259A), A
                        
   02b0   f1            	POP	AF
   02b1   fb            	EI
   02b2   c9            	RET
                        
   02b3                 ISR5
   02b3   f5            	PUSH	AF
                        
   02b4   3a 00 80      	LD	A, (INTFLAG)
   02b7   f6 20         	OR	32
   02b9   32 00 80      	LD	(INTFLAG), A
                        
   02bc   3e 20         	LD	A, 020H		; End of Interrupt
   02be   d3 00         	OUT	(I8259A), A
                        
   02c0   f1            	POP	AF
   02c1   fb            	EI
   02c2   c9            	RET
                        
   02c3                 ISR6
   02c3   f5            	PUSH	AF
                        
   02c4   3a 00 80      	LD	A, (INTFLAG)
   02c7   f6 40         	OR	64
   02c9   32 00 80      	LD	(INTFLAG), A
                        
   02cc   3e 20         	LD	A, 020H		; End of Interrupt
   02ce   d3 00         	OUT	(I8259A), A
                        
   02d0   f1            	POP	AF
   02d1   fb            	EI
   02d2   c9            	RET
                        
   02d3                 ISR7
   02d3   f5            	PUSH	AF
   02d4   e5            	PUSH	HL
   02d5   c5            	PUSH	BC
                        
   02d6   3a 00 80      	LD	A, (INTFLAG)
   02d9   f6 80         	OR	128
   02db   32 00 80      	LD	(INTFLAG), A
                        
   02de   21 00 b0      	LD	HL, IRQ7BUF
   02e1   3a 02 80      	LD	A, (NUM7)
   02e4   4f            	LD	C, A
   02e5   06 00         	LD	B, 0
   02e7   09            	ADD	HL, BC		; HL = pointer into buffer
                        
   02e8   3e 0a         	LD	A, 00AH		; Read IR register
   02ea   d3 00         	OUT	(I8259A), A
   02ec   db 00         	IN	A, (I8259A)
   02ee   77            	LD	(HL), A
   02ef   23            	INC	HL
                        
   02f0   3e 0b         	LD	A, 00BH		; Read IS register
   02f2   d3 00         	OUT	(I8259A), A
   02f4   db 00         	IN	A, (I8259A)
   02f6   77            	LD	(HL), A
   02f7   23            	INC	HL
                        
   02f8   3a 02 80      	LD	A, (NUM7)
   02fb   3c            	INC	A
   02fc   3c            	INC	A
   02fd   32 02 80      	LD	(NUM7), A
                        
   0300   3e 20         	LD	A, 020H		; End of Interrupt
   0302   d3 00         	OUT	(I8259A), A
                        
   0304   c1            	POP	BC
   0305   e1            	POP	HL
   0306   f1            	POP	AF
   0307   fb            	EI
   0308   c9            	RET
                        
                        ;----------------------------------------
                        
   0309   49 6e 74 65   INTROSTR	DB	"Interrupt test", 10, 0
   030d   72 72 75 70   
   0311   74 20 74 65   
   0315   73 74 0a 00   
                        
   0319   4a 75 73 74   JUSTSTR		DB	"Just sittin here", 10, 0
   031d   20 73 69 74   
   0321   74 69 6e 20   
   0325   68 65 72 65   
   0329   0a 00         
   032b   64 6f 69 6e   DOINGSTR	DB	"doing nothing...", 10, 0
   032f   67 20 6e 6f   
   0333   74 68 69 6e   
   0337   67 2e 2e 2e   
   033b   0a 00         
                        
   033d   47 6f 74 20   GOTINT0STR	DB	"Got interrupt 0", 10, 0
   0341   69 6e 74 65   
   0345   72 72 75 70   
   0349   74 20 30 0a   
   034d   00            
   034e   47 6f 74 20   GOTINT1STR	DB	"Got interrupt 1", 10, 0
   0352   69 6e 74 65   
   0356   72 72 75 70   
   035a   74 20 31 0a   
   035e   00            
   035f   47 6f 74 20   GOTINT2STR	DB	"Got interrupt 2", 10, 0
   0363   69 6e 74 65   
   0367   72 72 75 70   
   036b   74 20 32 0a   
   036f   00            
   0370   47 6f 74 20   GOTINT3STR	DB	"Got interrupt 3", 10, 0
   0374   69 6e 74 65   
   0378   72 72 75 70   
   037c   74 20 33 0a   
   0380   00            
   0381   47 6f 74 20   GOTINT4STR	DB	"Got interrupt 4", 10, 0
   0385   69 6e 74 65   
   0389   72 72 75 70   
   038d   74 20 34 0a   
   0391   00            
   0392   47 6f 74 20   GOTINT5STR	DB	"Got interrupt 5", 10, 0
   0396   69 6e 74 65   
   039a   72 72 75 70   
   039e   74 20 35 0a   
   03a2   00            
   03a3   47 6f 74 20   GOTINT6STR	DB	"Got interrupt 6", 10, 0
   03a7   69 6e 74 65   
   03ab   72 72 75 70   
   03af   74 20 36 0a   
   03b3   00            
   03b4   47 6f 74 20   GOTINT7STR	DB	"Got interrupt 7", 10, 0
   03b8   69 6e 74 65   
   03bc   72 72 75 70   
   03c0   74 20 37 0a   
   03c4   00            
                        
   3f00                 	ORG	03F00H
                        
                        	; IRQ0
   3f00   c3 3d 02      	JP	ISR0
   3f03   00            	DB	0
                        
                        	; IRQ1
   3f04   c3 4d 02      	JP	ISR1
   3f07   00            	DB	0
                        
                        	; IRQ2
   3f08   c3 5d 02      	JP	ISR2
   3f0b   00            	DB	0
                        
                        	; IRQ3
   3f0c   c3 93 02      	JP	ISR3
   3f0f   00            	DB	0
                        
                        	; IRQ4
   3f10   c3 a3 02      	JP	ISR4
   3f13   00            	DB	0
                        
                        	; IRQ5
   3f14   c3 b3 02      	JP	ISR5
   3f17   00            	DB	0
                        
                        	; IRQ6
   3f18   c3 c3 02      	JP	ISR6
   3f1b   00            	DB	0
                        
                        	; IRQ7
   3f1c   c3 d3 02      	JP	ISR7
   3f1f   00            	DB	0
                        
   3f20                 	END
0111  DIG1DONE      010f  DIG1LESS      0125  DIG2DONE      0123  DIG2LESS  
032b  DOINGSTR      033d  GOTINT0STR    034e  GOTINT1STR    035f  GOTINT2STR
0370  GOTINT3STR    0381  GOTINT4STR    0392  GOTINT5STR    03a3  GOTINT6STR
03b4  GOTINT7STR    003f  GOTRESETSTR    0000  I8259A        0001  I8259B    
01ab  INT2BYTE      0215  INT7BYTE      8000  INTFLAG       0309  INTROSTR  
a000  IRQ2BUF       b000  IRQ7BUF       023d  ISR0          024d  ISR1      
025d  ISR2          0293  ISR3          02a3  ISR4          02b3  ISR5      
02c3  ISR6          02d3  ISR7          0319  JUSTSTR       0061  LCDCLR    
0003  LCDDATA       004c  LCDINIT       0002  LCDINST       00a5  LCDNOSWITCH
00ce  LCDP1LOOP     00b2  LCDP1SL1      00b4  LCDP1SL2      00b6  LCDP1SL3  
00e7  LCDP1SLP1     00e9  LCDP1SLP2     00eb  LCDP1SLP3     00a3  LCDP2LOOP 
0093  LCDPCLOOP     00d5  LCDPDOIT      00df  LCDPDONE      0099  LCDPLOOP  
00db  LCDPNEXT      00c6  LCDPNLOOP     0089  LCDPRINT      00d9  LCDPWLOOP 
0001  LCLEAR        007f  LCSTRING      0005  LCSTRLEN      0080  LHALF1    
00c0  LHALF2        006b  LISTRING      000a  LISTRLEN      0038  LRESET    
0138  MAIN          01aa  NOCLIP2       0214  NOCLIP7       017f  NOINT0    
018c  NOINT1        01c2  NOINT2        01cf  NOINT3        01dc  NOINT4    
01e9  NOINT5        01f6  NOINT6        022c  NOINT7        8001  NUM2      
8002  NUM7          0058  OUTBLOOP      0056  OUTBYTES      000a  PAUSE     
00f8  PHEXBYTE      012d  PHEXWORD      0004  PIC           0158  PRNTAGAIN 
9000  PRNTBUF       0000  STACKTOP      016d  TESTINT       00e4  WAITSECS  
