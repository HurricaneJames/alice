/*
    H line = 63.6 usec (15.720 Hz)
    H sync = 5 usec (7.86%)
    V sync = 400 usec (80 H)
    live scan = 160 H
    retrace = 102 H
*/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>


unsigned char buf[65536];


unsigned char pic[238][210];


void loadPic(char *name)
{
    FILE *fp;
    int width, height;
    int x, y;
    int pixel;

    fp = fopen(name, "r");

    if (fp == NULL) {
	perror(name);
	exit(EXIT_FAILURE);
    }
    fscanf(fp, "P1 %d %d", &width, &height);
    
    for (y = 0; y < height; y++) {
        for (x = 0; x < width; x++) {
	    fscanf(fp, "%d", &pixel);
	    pic[(238 - height) / 2 + y][(210 - width) / 2 + 10 + x] =
		(pixel == 0);
	}
    }

    fclose(fp);
}


int main(int argc, char **argv)
{
    int row;
    int col;
    int x, y;
    unsigned char *p;

    if (argc == 1) {
	fprintf(stderr, "usage: %s file.pbm\n", argv[0]);
	exit(EXIT_FAILURE);
    }

    /*
     * Fill picture with black
     */
    memset(pic, 0x00, sizeof(pic));

    loadPic(argv[1]);

    /*
     * Fill memory with reset command
     */
    memset(buf, 0x20, sizeof(buf));

    p = buf;

    /*
     * Rows 0 through 8 are vertical blank
     */
    for (row = 0; row < 3; row++) {
	for (col = 0; col < 227; col++) {
	    if (col < 17 || (col > 227/2 && col < 227/2 + 17)) {
		*p++ = 0x00;
	    } else {
		*p++ = 0x80;
	    }
	}
    }
    for (row = 3; row < 6; row++) {
	for (col = 0; col < 227; col++) {
	    if (col < 227/2-17 || (col > 227/2 && col < 210)) {
		*p++ = 0x00;
	    } else {
		*p++ = 0x80;
	    }
	}
    }
    for (row = 6; row < 9; row++) {
	for (col = 0; col < 227; col++) {
	    if (col < 17 || (col > 227/2 && col < 227/2 + 17)) {
		*p++ = 0x00;
	    } else {
		*p++ = 0x80;
	    }
	}
    }

    /*
     * Rows 9 through 23 are other part of vertical blank
     */
    for (row = 9; row < 24; row++) {
	for (col = 0; col < 227; col++) {
	    if (col < 17) {
		*p++ = 0x00;
	    } else {
		*p++ = 0x80;
	    }
	}
    }

    /*
     * Remaining rows are video data plus horizontal blanking
     */
    for (row = 24; row < 262; row++) {
	for (col = 0; col < 227; col++) {
	    if (col < 17) {
		*p++ = 0x00;
	    } else {
		x = col - 17;
		y = row - 24;
		if (pic[y][x]) {
		    *p++ = 0xc0;
		} else {
		    *p++ = 0x80;
		}
	    }
	}
    }

    fwrite(buf, 65536, 1, stdout);

    return(0);
}
