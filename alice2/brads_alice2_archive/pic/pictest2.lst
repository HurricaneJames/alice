PIC Macro Assembler Version 2.52    Copyright 1995, microEngineering Labs				Page 1

     1					;
     2					; Brad and Lawrence's PIC test program.
     3					; Accepts a byte write on PORTD, increments that byte, then
     4					; writes that byte on PORTD, then interrupts the CPU by setting A0 low
     5					; On interrupt, clears the interrupt by setting A0 high.
     6					;
     7					; January 25, 1996
     8					;
     9						maclib 'p64.inc'
    10					
    11					        device  pic16c64,xt_osc,wdt_off,pwrt_off,protect_off
    12					
    13	=0020				w_temp  equ     020h
    14	=0021				status_temp equ 021h
    15					
    16	0000-				reset
    17					        org     0               ; on reset
    18	0000- 2805			        goto    start
    19					
    20	0001-				intsvc
    21					        org     4               ; on interrupt
    22	0004- 2816			        goto    interrupt
    23					
    24	0005-				start
    25	0005- 1283			        bcf     rp0             ; bank 0
    26	0006- 1405			        bsf     porta,0         ; don't interrupt CPU
    27	0007- 138C			        bcf     pspif           ; clear PSP interrupt flag
    28	0008- 0187			        clrf    portc           ; nothing on our debug port
    29					
    30	0009- 1683			        bsf     rp0             ; bank 1
    31	000A- 1005			        bcf     trisa,0         ; bit 0 port A is output
    32					
    33	000B- 1409			        bsf     trise0          ; /RD is input
    34	000C- 1489			        bsf     trise1          ; /WR is input
    35	000D- 1509			        bsf     trise2          ; /CS is input
    36					
    37	000E- 0187			        clrf    trisc           ; C is all output
    38					
    39	000F- 178C			        bsf     pspie           ; enable PSP interrupts
    40	0010- 1609			        bsf     pspmode         ; enable PSP mode
    41	0011- 170B			        bsf     peie            ; enable peripheral interrupts
    42	0012- 178B			        bsf     gie             ; enable all interrupts
    43					
    44	0013- 1283			        bcf     rp0             ; bank 0
    45					
    46	0014- 1407			        bsf     portc,0         ; got here!
    47					
    48	0015-				loop
    49	0015- 2815			        goto loop               ; infinite loop
    50					                                  
    51	0016-				interrupt
    52					        ; save W and STATUS
    53	0016- 00A0			        movwf   w_temp          ; save W
    54	0017- 0E03			        swapf   status, w       ; save status in W
    55	0018- 1283			        bcf     rp0             ; bank 0
    56	0019- 00A1			        movwf   status_temp     ; save status
    57					
    58	001A- 1487			        bsf     portc,1         ; got here!
PIC Macro Assembler Version 2.52    Copyright 1995, microEngineering Labs				Page 2

    59					
    60	001B- 1F8C			        btfss   pspif           ; test PSP interrupt flag
    61	001C- 2828			        goto    endinterrupt    ; not PSP, return
    62	001D- 1507			        bsf     portc,2         ; got here!
    63	001E- 1683			        bsf     rp0             ; bank 1
    64	001F- 1F89			        btfss   ibf             ; did we get a write?
    65	0020- 2826			        goto    gotread         ; nope, jump to read
    66					        ; we got a write
    67	0021- 1283			        bcf     rp0             ; bank 0
    68	0022- 0A88			        incf    portd           ; increment data port
    69	0023- 1005			        bcf     porta,0         ; interrupt the CPU
    70	0024- 1587			        bsf     portc,3         ; got here!
    71	0025- 2828			        goto    endinterrupt    ; return
    72					
    73	0026-				gotread
    74	0026- 1283			        bcf     rp0             ; bank 0
    75	0027- 1405			        bsf     porta,0         ; don't assert interrupt
    76					        ; drop into endinterrupt
    77					
    78	0028-				endinterrupt
    79	0028- 1283			        bcf     rp0             ; bank 0
    80	0029- 1607			        bsf     portc,4         ; got here!
    81	002A- 138C			        bcf     pspif           ; clear PSP interrupt flag
    82					
    83					        ; restore W and STATUS
    84	002B- 0E21			        swapf   status_temp, w  ; put old status in W
    85	002C- 0083			        movwf   status          ; put into status
    86	002D- 0EA0			        swapf   w_temp, 1       ; swap w_temp in place
    87	002E- 0E20			        swapf   w_temp, w       ; put old W into W
    88					
    89	002F- 0009			        retfie
