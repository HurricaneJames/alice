
- Z buffer plan:
    - Make Z test.
        - Use protocol.
        - Make two triangles that intersect.
        - Have them rotate.
    - Add a memory controller port:
        1. Front buffer scanout.
        2. Read command buffer and Z.
        3. Write color and Z.
    - Create a read FIFO:
        - Width:
            - 29 bits: color address.
            - 48 bits: color.
            - 29 bits: Z address.
            - 64 bits: Z.
            - 2 bits: which pixel is active.
            - 172 bits total.
            - Could use address offset:
                - 800*480/2 = 192,000 = 18 bits.
                - 132 bits total.
        - Depth 32?
    - Create a write FIFO:
        - Width:
            - (Same as above).
        - Depth 32?
    - In triangle setup:
        - Set up Z address
        - Set up Z values.
    - In draw loop:
        - Block if size of both FIFOs exceeds size of write FIFO.
        - Instead of assigning writeenable, write to read FIFO.
        - Also initiate Z read.
    - When Z read returns:
        - Also read from read FIFO.
        - Store in registers.
        - One clock later, compare Z.
        - If succeeds, or if Z-buffer is disabled, write to write FIFO.
        - No need for state machine, it's a pipeline.
    - If write FIFO is not empty:
        - Read entry.
        - Write to color buffer.
        - Write to Z buffer.
        - Use state machine.
    - Need to flush FIFOs before the next triangle.
        - Could do that at end of triangle.
        - Or could do that both at beginning of triangle (after setup)
            and before swap.
    - Keep track of total number of pixels in the pipeline.
        - Single global register.
        - Algorithm:
            - If read_z and read_write_fifo:
                - Do nothing.
            - else if read_z:
                - count++
            - else if read_write_fifo:
                - count--
            - else:
                - Do nothing.
        - That's fine for counting what's in the FIFOs, but can't be
            used for flushing the FIFOs. Maybe use the end of Z write
            for that.

- Naming conventions:
    - Registers and wires: all lower case with underscores.
    - Modules: Sentence capitalization (first letter only) with underscores.
    - Constants: All caps.
    - Active low: _n suffix (reset_n).
    - Input parameters: No special syntax.
    - Output parameters: No special syntax.
    - Always specify "wire" or "reg" in parameters.

- Xilinx
    - FPGAs
        - https://www.xilinx.com/support/documentation/selection-guides/cost-optimized-product-selection-guide.pdf
        - Spartan (low-cost)
            - Retired?
            - Spartan-3 is older.
            - Spartan-6
                - 45nm.
                - Spartan-6 LX
                    - Some have more than 4 MB block RAM.
                - Spartan-6 LXT (with serial connectivity, PCIe)
            - Spartan-7
                - 28nm.
        - Artix (low-cost)
            - Artix-7
                - 28nm.
        - Zynq-7000 (with embedded ARM).
        - Virtex (high performance)
            - Virtex-7
                - 28nm.
            - Virtex UltraScale.
                - 20nm.
            - Virtex UltraScale+.
                - 16nm.
        - Kintex (mid-range)
            - Kintex-7
                - 28nm.
            - Kintex UltraScale.
                - 20nm.
            - Kintex UltraScale+.
                - 16nm.
    - Boards:
        - FS604:
            - http://www.sioi.com.au/shop/product_info.php/cPath/30_24/products_id/47
            - AU$59 ($44)
            - Spartan 6 LX4
            - 38 GPIOs.
            - 32 MB DRAM (DDR400) (With DRAM controller IP core (DDR166))
        - USB-FPGA Module 2.04
            - http://www.ztex.de/usb-fpga-2/usb-fpga-2.04.e.html
            - $130
            - Spartan 6 XL16
            - 96 GPIOs (0.1" female header on bottom).
            - 64 MB DDR SDRAM (includes controller)
            - Looks very convenient as daughter card.
        - Papilio Pro
            - http://retrocade.gadgetfactory.net/index.php?n=Main.PapilioPro
            - $85 on Amazon, $75 from GadgetFactory website.
            - Spartan 6 LX9
            - 48 GPIOs (in Wing form factor).
            - 8 MB SDRAM (will provide controller later?)
        - XuLA2-LX25
            - http://www.xess.com/shop/product/xula2-lx25/
            - $120
            - Spartan 6 LX25
            - 33 I/O pins.
            - 32 MB SDRAM (with controller interface)
            - Seems to have nice docs and example programs, but maybe all in VHDL.
        - Saturn:
            - http://numato.com/saturn-spartan-6-fpga-development-board-with-ddr-sdram/
            - $120
            - Spartan 6 LX16 or LX45
            - > 100 GPIOS
            - 64 MB LPDDR.
- Read this:
    - http://www.xess.com/static/media/appnotes/FpgasNowWhatBook.pdf





state   reset_fifo   x   y    fifo_input    wrreq   wrfull
START       0        ?   ?        ?           0       0
RESET       1        ?   ?        ?           0       0
GOING       0        0   0        C0          1       0
            0        1   0        C1          1       0
            0        2   0        C2          1       1
            0        2   0        ?           0       0
            0        3   0        C3          1       0
STOPPED     0        ?   ?        ?           0       0




Four cases:

    Make status word, display it on LCD.
        Works.

    Make status word, don't display it on LCD.
        Doesn't load, but JTAG succeeds.

    Don't make status word, display it on LCD.
        Loads, but then breaks JTAG. (Can only do it once.)

    Don't make status word, don't display it on LCD.
        Works.


                Status    Constant
              +-------------------
              |
    Display   |  Works     Breaks
              |             JTAG
              |
    Suppress  |  Fails     Works
              |

Next:

    Check pin assignment of all Main() parameters.
    Read this page:
        http://www.alteraforum.com/forum/showthread.php?t=45817
        https://www.developpez.net/forums/d1566375/autres-langages/autres-langages/vhdl/echange-donnees-hps-fpga-via-dma/
    Check size of generated binary.

